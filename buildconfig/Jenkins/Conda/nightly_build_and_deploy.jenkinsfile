// This script expects the following environment variables to be set by the Jenkins job:
// GITHUB_TOKEN_CREDENTIAL_ID - The name of the credentials token in Jenkins that you want to use for cloning and pushing to the conda-recipes repo
// ANACONDA_TOKEN_CREDENTIAL_ID - The name of the credentials token in Jenkins that you want to use for publishing conda packages
// ANACONDA_CHANNEL - The channel to publish to on Anaconda.org
// CONDA_BLD_PATH - The path to where conda-build will construct the packages, needed for windows due to path length. Must be inside the Workspace ending with conda-bld, equivelant to $WORKSPACE/conda-bld. Due to limitations with jenkins archiving of artifacts.

def build_and_test_linux() {
    sh "$WORKSPACE/buildconfig/Jenkins/Conda/conda-buildscript $WORKSPACE linux-ci --enable-systemtests --enable-doctests --clean-build --clean-external-projects"
}

def build_and_test_macos() {
    sh "$WORKSPACE/buildconfig/Jenkins/Conda/conda-buildscript $WORKSPACE osx-ci --enable-systemtests --enable-doctests --clean-build --clean-external-projects"
}

def build_and_test_win(){
    bat "\"C:\\Program Files\\git\\bin\\bash.exe\" -c \"C:/Jenkins/workspace/$JOB_NAME/buildconfig/Jenkins/Conda/conda-buildscript C:/Jenkins/workspace/$JOB_NAME win --enable-systemtests --clean-build --clean-external-projects\""
}

def conda_build_UNIX(){
    sh "rm -rf $CONDA_BLD_PATH"
    sh "$WORKSPACE/buildconfig/Jenkins/Conda/conda-build-recipes $WORKSPACE --build-mantid --build-qt --build-workbench"
}

def conda_build_linux() {
    conda_build_UNIX()
    archive_conda_build("linux-64")
}

def conda_build_macos() {
    conda_build_UNIX()
    archive_conda_build("osx-64")
}

def conda_build_win(){
    sh "rmdir /S /Q $CONDA_BLD_PATH"
    bat "\"C:\\Program Files\\git\\bin\\bash.exe\" -c \"C:/Jenkins/workspace/$JOB_NAME/buildconfig/Jenkins/Conda/conda-build-recipes C:/Jenkins/workspace/$JOB_NAME --build-mantid --build-qt --build-workbench\""
    archive_conda_build("win-64")
}

def archive_conda_build(build_name) {
    archiveArtifacts artifacts: "conda-bld/$build_name/*.tar.bz2",
                allowEmptyArchive: false,
                fingerprint: true,
                onlyIfSuccessful: true
}

pipeline {
    agent none
    stages {
        stage('Build and Test'){
            parallel {
                stage('Build and Test on Ubuntu') {
                    agent { label 'ubuntu-18.04-build' }
                    steps {
                        build_and_test_linux()
                    }
                }
                stage('Build and Test on RHEL7') {
                    agent { label 'rhel7-build' }
                    steps {
                        build_and_test_linux()
                    }
                }
                stage('Build and Test on Windows') {
                    agent { label 'win-build' }
                    steps {
                        build_and_test_win()
                    }
                }
                stage('Build and Test on MacOS') {
                    agent { label 'osx-10.13-build' }
                    steps {
                        build_and_test_macos()
                    }
                }
            }
        }
        stage('Update conda-recipes repository') {
            agent { label 'conda-build-linux' }
            environment {
                GITHUB_ACCESS_TOKEN = credentials("${GITHUB_TOKEN_CREDENTIAL_ID}")
            }
            steps {
               sh '$WORKSPACE/buildconfig/Jenkins/Conda/update-conda-recipes.sh $GITHUB_ACCESS_TOKEN $GITHUB_USER_NAME'
            }
        }
        stage('Package and Test') {
            parallel {
                stage('conda-build Linux') {
                    agent { label 'conda-build-linux' }
                    environment {
                        CONDA_BLD_PATH = "${WORKSPACE}/conda-bld"
                    }
                    steps {
                        conda_build_linux()
                    }
                }
                stage('conda-build Windows') {
                    agent { label 'conda-build-win' }
                    environment {
                        CONDA_BLD_PATH = "${WORKSPACE}/conda-bld"
                    }
                    steps {
                        conda_build_win()
                    }
                }
                stage('conda-build MacOSX') {
                    agent { label 'conda-build-osx' }
                    environment {
                        CONDA_BLD_PATH = "${WORKSPACE}/conda-bld"
                    }
                    steps {
                        conda_build_macos()
                    }
                }
            }
        }
        stage ('Deploy packages'){
            environment {
                ANACONDA_TOKEN = credentials("${ANACONDA_TOKEN_CREDENTIAL_ID}")
            }
            agent { label 'conda-build-linux' } // Use linux for simplicity with shell scripts
            steps{
                // Copy all artifacts into $WORKSPACE from the current job, using ${JOB_NAME} and the current ${BUILD_NUMBER}
                copyArtifacts fingerprintArtifacts: true, projectName: '${JOB_NAME}', selector: specific('${BUILD_NUMBER}')
                sh '$WORKSPACE/buildconfig/Jenkins/Conda/publish-to-anaconda $WORKSPACE $ANACONDA_TOKEN $ANACONDA_CHANNEL $WORKSPACE/mantid-*.tar.bz2 $WORKSPACE/mantidqt-*.tar.bz2 $WORKSPACE/mantidworkbench-*.tar.bz2'
            }
        }
    }
}
