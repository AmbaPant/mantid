.. algorithm::

.. summary::

.. relatedalgorithms::

.. properties::

Description
-----------

This algorithm saves a workspace containing a single spectrum in ASCII format with .mft file name extension and can be used by software like Motofit.
The file contains header lines, and columns of data described by q, refl, refl_error and q_res.
It is especially useful for saving reflectometry reduction data.
A file can be loaded back into Mantid by SaveAscii, which will not have an instrument defined.
Both, point data and histograms can be saved but note that the resulting file will always contain points for q and not bin edges.
This algorithm writes data in scientific exponential notation (E-notation) in double-precision.

Usage
-----

**Example - Save a workspace in MFT ASCII**

.. testcode:: SaveMFT_general_usages

    # import the os path libraries for directory functions
    import os

    # create histogram workspace
    x = range(0, 4)
    y = range(0, 3)
    e = [1]*3
    dx = [9.5]*3

    ws = CreateWorkspace(DataX=x, DataY=y, DataE=e, Dx=dx)

    # Create an absolute path by joining the proposed filename to a directory
    # os.path.expanduser("~") used in this case returns the home directory of the current user
    file = os.path.join(os.path.expanduser("~"), "ws.mft")

    # Save to file with mft extension
    SaveMFT(InputWorkspace=ws, Filename=file)

    if os.path.exists(file):
      myFile = open(file, 'r')
      print myFile.read()

    file2 = os.path.join(os.path.expanduser("~"), "ws.mft")

    # The workspace ws has already an entry run_title
    AddSampleLog(Workspace=ws, LogName='Title', LogText='MyTest', LogType='String')
    AddSampleLog(Workspace=ws, LogName='d', LogText='0.3', LogType='Number', LogUnit='mm', NumberType='Double')

    # Save with mft extension
    SaveMFT(InputWorkspace=ws, Filename=file2, LogList=['Title', 'd'])

    if os.path.exists(file2):
      mySecondFile = open(file2, 'r')
      print mySecondFile.read()

.. testcleanup:: SaveMFT_general_usages

    # Delete files
    os.remove(file)
    os.remove(file2)

.. categories::

.. sourcelink::
