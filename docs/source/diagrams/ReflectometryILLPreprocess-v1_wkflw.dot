digraph ReflectometryILLPreprocess {
  label = "ReflectometryILLPreprocess workflow diagram"
  $global_style

  subgraph params {
    $param_style
    background        [label="Background options:\nLow/HighAngleBkgOffset\nLow/HighAngleBkgWidth"]
    beamCentre        [label="BeamCentre"]
    braggAngle        [label="BraggAngle"]
    run               [label="Run"]
    inputBeamPosition [label="DirectBeamPositionWorkspace"]
    inputWorkspace    [label="InputWorkspace"]
    output            [label="OutputWorkspace"]
    waterReference    [label="WaterWorkspace"]
  }

  subgraph algorithms {
    $algorithm_style
    toWavelength          [label="Convert from TOF\n to wavelength"]
    extractMonitors       [label="ExtractMonitors"]
    moveDetectors         [label="SpecularReflectionPositionCorrect"]
    determinePeakPosition [label="FindReflectometryLines"]
    fluxNorm              [label="Divide by duration/\nmonitor counts"]
    load                  [label="LoadAndMerge"]
    addSampleLogs         [label="AddSampleLog"]
    addSampleLogTwoTheta  [label="AddSampleLog"]
    waterNorm             [label="Divide by\nwater reference"]
    slitNorm              [label="Divide by\nslit opening area"]
    subtractBkg           [label="Subtract background"]
  }

  subgraph decisions {
    $decision_style
    whichInput [label="Use workspace\nor\nread from disk?"]
    isSlitNorm [label="SlitNormalisation?"]
  }

  whichInput -> inputWorkspace [label="Use workspace"]
  whichInput -> load [label="Read from disk"]

  run                   -> load
  beamCentre            -> load [label="Override beam centre\nfrom loader"]
  braggAngle            -> load [label="Override angles in .nxs"]
  inputBeamPosition     -> load
  load                  -> extractMonitors
  inputWorkspace        -> extractMonitors
  beamCentre            -> determinePeakPosition
  extractMonitors       -> determinePeakPosition
  determinePeakPosition -> addSampleLogs [label="foreground.centre_workspace_index,\nforeground.first_workspace_index,\nforeground.last_workspace_index,\npeak_position"]
  determinePeakPosition -> moveDetectors
  braggAngle            -> moveDetectors [label="If user input,\nloader took already care\nof the correct detector position"]
  moveDetectors         -> addSampleLogTwoTheta [label="twoTheta"]
  moveDetectors         -> waterNorm [label="WaterWorkspace available"]
  waterReference        -> waterNorm [label="Rebin"]
  waterNorm             -> isSlitNorm
  moveDetectors         -> isSlitNorm
  isSlitNorm            -> slitNorm [label="Slit Normalisation ON"]
  isSlitNorm            -> fluxNorm [label="Slit Normalisation OFF"]
  slitNorm              -> fluxNorm
  fluxNorm              -> subtractBkg
  background            -> subtractBkg
  subtractBkg           -> toWavelength
  toWavelength          -> output
}
